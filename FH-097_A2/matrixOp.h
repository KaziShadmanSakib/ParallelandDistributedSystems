/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MATRIXOP_H_RPCGEN
#define _MATRIXOP_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct Matrix {
	int rows;
	int cols;
	struct {
		u_int data_len;
		double *data_val;
	} data;
};
typedef struct Matrix Matrix;

struct MatrixPair {
	Matrix matrixA;
	Matrix matrixB;
};
typedef struct MatrixPair MatrixPair;

#define MATRIXOP_PROG 0x23451111
#define MATRIXOP_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define ADD 1
extern  Matrix * add_1(MatrixPair *, CLIENT *);
extern  Matrix * add_1_svc(MatrixPair *, struct svc_req *);
#define MULTIPLY 2
extern  Matrix * multiply_1(MatrixPair *, CLIENT *);
extern  Matrix * multiply_1_svc(MatrixPair *, struct svc_req *);
#define INVERSE 3
extern  Matrix * inverse_1(Matrix *, CLIENT *);
extern  Matrix * inverse_1_svc(Matrix *, struct svc_req *);
#define TRANSPOSE 4
extern  Matrix * transpose_1(Matrix *, CLIENT *);
extern  Matrix * transpose_1_svc(Matrix *, struct svc_req *);
extern int matrixop_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define ADD 1
extern  Matrix * add_1();
extern  Matrix * add_1_svc();
#define MULTIPLY 2
extern  Matrix * multiply_1();
extern  Matrix * multiply_1_svc();
#define INVERSE 3
extern  Matrix * inverse_1();
extern  Matrix * inverse_1_svc();
#define TRANSPOSE 4
extern  Matrix * transpose_1();
extern  Matrix * transpose_1_svc();
extern int matrixop_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Matrix (XDR *, Matrix*);
extern  bool_t xdr_MatrixPair (XDR *, MatrixPair*);

#else /* K&R C */
extern bool_t xdr_Matrix ();
extern bool_t xdr_MatrixPair ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MATRIXOP_H_RPCGEN */
